components:
  parameters:
    groupId:
      description: Unique identifier of the group
      in: path
      name: groupId
      required: true
      schema:
        description: Unique Identifier of the group
        format: uuid
        maxLength: 36
        minLength: 36
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
  schemas:
    Conversation:
      description: A conversation between users
      properties:
        id:
          description: Unique conversation identifier
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        lastMessage:
          description: Most recent message preview
          properties:
            content:
              description: Message preview text
              maxLength: 100
              minLength: 1
              pattern: ^.{1,100}$
              type: string
            timestamp:
              description: Message timestamp
              format: date-time
              type: string
              minLength: 1
              maxLength: 100
            type:
              description: Message type
              enum:
              - text
              - photo
              type: string
          required:
          - type
          type: object
        name:
          description: Display name
          maxLength: 50
          minLength: 1
          pattern: ^.{1,50}$
          type: string
        type:
          description: Conversation type
          enum:
          - individual
          - group
          type: string
      required:
      - type
      type: object
    Error:
      description: Standard error response
      properties:
        code:
          description: Error code identifier
          maxLength: 50
          minLength: 1
          pattern: ^[A-Z_]{1,50}$
          type: string
        message:
          description: Human readable error message
          maxLength: 200
          minLength: 1
          pattern: ^.{1,200}$
          type: string
      type: object
    Message:
      description: A message within a conversation
      properties:
        content:
          description: Message content or photo URL
          maxLength: 1000
          minLength: 1
          pattern: ^.{1,1000}$
          type: string
        id:
          description: Unique message identifier
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        sender:
          description: Username of sender
          maxLength: 16
          minLength: 3
          pattern: ^[a-zA-Z0-9_]{3,16}$
          type: string
        status:
          description: Message delivery status
          enum:
          - sent
          - received
          - read
          type: string
          minLength: 1
          maxLength: 100
        timestamp:
          description: Message creation time
          format: date-time
          type: string
          minLength: 1
          maxLength: 100
        type:
          description: Content type of message
          enum:
          - text
          - photo
          type: string
          minLength: 1
          maxLength: 1000
      required:
      - type
      - status
      type: object
    Reaction:
      description: An emoji reaction to a message
      properties:
        emoji:
          description: Emoji reaction
          maxLength: 2
          minLength: 1
          pattern: /(\u00a9|\u00ae|[\u2000-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/g
          type: string
        userId:
          description: User identifier who reacted
          maxLength: 36
          minLength: 36
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        username:
          description: Username of reactor
          maxLength: 16
          minLength: 3
          pattern: ^[a-zA-Z0-9_]{3,16}$
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: API for WASAText messaging application
  title: WASAText API
  version: 1.0.0
openapi: 3.0.3
paths:
  /conversations:
    get:
      description: Get all conversations for authenticated user
      operationId: getMyConversations
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of conversations
                items:
                  $ref: '#/components/schemas/Conversation'
                type: array
                minItems: 1
                maxItems: 1000
          description: List of conversations
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
      summary: List user conversations
      tags:
      - Conversations
  /conversations/{conversationId}:
    get:
      description: Get conversation info and message history
      operationId: getConversation
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Get Conversation details 
                properties:
                  # description: Conversation details properties
                  conversation:
                    $ref: '#/components/schemas/Conversation'
                  messages:
                    description: List of messages in conversation
                    items:
                      $ref: '#/components/schemas/Message'
                    type: array
                    minItems: 1
                    maxItems: 5000
                required:
                - messages
                type: object
          description: Conversation details
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conversation not found
      summary: Get conversation details
      tags:
      - Conversations
    parameters:
    - description: Unique conversation identifier
      in: path
      name: conversationId
      required: true
      schema:
        format: uuid
        maxLength: 36
        minLength: 36
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
  /conversations/{conversationId}/messages:
    parameters:
    - description: Unique conversation identifier
      in: path
      name: conversationId
      required: true
      schema:
        format: uuid
        maxLength: 36
        minLength: 36
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
    post:
      description: Send new message to conversation
      operationId: sendMessage
      requestBody:
        content:
          application/json:
            schema:
              description: Message details
              properties:
                content:
                  description: Message content
                  maxLength: 1000
                  minLength: 1
                  pattern: ^.{1,1000}$
                  type: string
                type:
                  description: Message type
                  enum:
                  - text
                  - photo
                  type: string
              required:
              - content
              - type
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Message sent
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conversation not found
      summary: Send message
      tags:
      - Messages
  /groups/{groupId}/leave:
    parameters:
    - $ref: '#/components/parameters/groupId'
    post:
      description: Removes authenticated user from a group
      operationId: leaveGroup
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Leave group result
                properties:
                  success:
                    description: Whether the user left successfully
                    type: boolean
                type: object
          description: Successfully left the group
      summary: Leave a group
      tags:
      - Groups
  /groups/{groupId}/members:
    parameters:
    - description: Unique identifier of the group
      in: path
      name: groupId
      required: true
      schema:
        format: uuid
        maxLength: 36
        minLength: 36
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
    post:
      description: Adds new member to a group conversation
      operationId: addToGroup
      requestBody:
        content:
          application/json:
            schema:
              description: New member details
              properties:
                userId:
                  description: Identifier of user to add
                  format: uuid
                  maxLength: 36
                  minLength: 36
                  pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
              required:
              - userId
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Add member result
                properties:
                  success:
                    description: Whether the user was added successfully
                    type: boolean
                type: object
          description: User added to group successfully
      summary: Add a user to a group
      tags:
      - Groups
  /groups/{groupId}/name:
    parameters:
    - $ref: '#/components/parameters/groupId'
    put:
      description: Changes the display name of a group
      operationId: setGroupName
      requestBody:
        content:
          application/json:
            schema:
              description: Group name update request
              properties:
                name:
                  description: New name for the group
                  maxLength: 50
                  minLength: 1
                  pattern: ^[^\n]{1,50}$
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Updated group details
                properties:
                  name:
                    description: New group name
                    maxLength: 50
                    minLength: 1
                    pattern: ^[^\n]{1,50}$
                    type: string
                type: object
          description: Group name updated successfully
      summary: Update group name
      tags:
      - Groups
  /groups/{groupId}/photo:
    parameters:
    - $ref: '#/components/parameters/groupId'
    put:
      description: Changes the photo of a group
      operationId: setGroupPhoto
      requestBody:
        content:
          image/*:
            schema:
              description: New photo for the group
              format: binary
              type: string
              minLength: 1
              maxLength: 100000000
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Updated photo details
                properties:
                  photoUrl:
                    description: URL of the updated photo
                    maxLength: 255
                    minLength: 1
                    pattern: ^https?://[^\s/$.?#].[^\s]*$
                    type: string
                type: object
          description: Group photo updated successfully
      summary: Update group photo
      tags:
      - Groups
  /messages/{messageId}:
    delete:
      description: Removes a message sent by the authenticated user
      operationId: deleteMessage
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Delete operation result
                properties:
                  success:
                    description: Whether the deletion was successful
                    type: boolean
                type: object
          description: Message deleted successfully
      summary: Delete a message
      tags:
      - Messages
    parameters:
    - description: Unique identifier of the message
      in: path
      name: messageId
      required: true
      schema:
        format: uuid
        maxLength: 36
        minLength: 36
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
  /messages/{messageId}/forward:
    parameters:
    - description: Unique identifier of the message
      in: path
      name: messageId
      required: true
      schema:
        format: uuid
        maxLength: 36
        minLength: 36
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
    post:
      description: Forwards an existing message to another conversation
      operationId: forwardMessage
      requestBody:
        content:
          application/json:
            schema:
              description: Forward message request
              properties:
                conversationId:
                  description: Target conversation identifier
                  format: uuid
                  maxLength: 36
                  minLength: 36
                  pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
              required:
              - conversationId
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Message forwarded successfully
      summary: Forward a message
      tags:
      - Messages
  /messages/{messageId}/reactions:
    delete:
      description: Removes user's emoji reaction from a message
      operationId: uncommentMessage
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Remove reaction result
                properties:
                  success:
                    description: Whether the reaction was removed
                    type: boolean
                type: object
          description: Reaction removed successfully
      summary: Remove a reaction from a message
      tags:
      - Messages
    parameters:
    - description: Unique identifier of the message
      in: path
      name: messageId
      required: true
      schema:
        format: uuid
        maxLength: 512
        minLength: 1
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
    post:
      description: Adds an emoji reaction to a message
      operationId: commentMessage
      requestBody:
        content:
          application/json:
            schema:
              description: Reaction details
              properties:
                emoji:
                  description: Emoji character to react with
                  maxLength: 2
                  minLength: 1
                  pattern: /(\u00a9|\u00ae|[\u2000-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/g
                  type: string
              required:
              - emoji
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
          description: Reaction added successfully
      summary: Add a reaction to a message
      tags:
      - Messages
  /session:
    post:
      description: "Authenticate existing user \nIf user does not exist, it will be\
        \ created\nand an identifier is returned\n"
      operationId: doLogin
      requestBody:
        content:
          application/json:
            schema:
              description: User login details
              properties:
                name:
                  description: Username for login
                  example: Maria
                  maxLength: 16
                  minLength: 3
                  pattern: ^[a-zA-Z0-9_]{3,16}$
                  type: string
              required:
              - name
              type: object
        description: User details
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Authentication token
                properties:
                  identifier:
                    description: Authentication token
                    example: abcdef012345
                    maxLength: 64
                    minLength: 1
                    pattern: ^[A-Za-z0-9-_]{1,64}$
                    type: string
                type: object
          description: Login successful
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
      security: []
      summary: Login or register user
      tags:
      - Login
  /users/me/name:
    put:
      description: Change authenticated user's display name
      operationId: setMyUserName
      requestBody:
        content:
          application/json:
            schema:
              description: New username request
              properties:
                name:
                  description: New username
                  maxLength: 16
                  minLength: 3
                  pattern: ^[a-zA-Z0-9_]{3,16}$
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Updated name details
                properties:
                  name:
                    description: Updated username
                    maxLength: 16
                    minLength: 3
                    pattern: ^[a-zA-Z0-9_]{3,16}$
                    type: string
                type: object
          description: Name updated successfully
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Name already in use
      summary: Update username
      tags:
      - User
  /users/me/photo:
    put:
      description: Change authenticated user's profile picture
      operationId: setMyPhoto
      requestBody:
        content:
          image/*:
            schema:
              description: New profile photo
              format: binary
              type: string
              minLength: 1
              maxLength: 100000000
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Updated photo details
                properties:
                  photoUrl:
                    description: URL of updated photo
                    maxLength: 255
                    minLength: 1
                    pattern: ^https?://[^\s/$.?#].[^\s]*$
                    type: string
                type: object
          description: Photo updated successfully
      summary: Update profile photo
      tags:
      - User
security:
- bearerAuth: []
tags:
- description: User authentication endpoints
  name: Login
- description: User management endpoints
  name: User
- description: Conversation management endpoints
  name: Conversations
- description: Message handling endpoints
  name: Messages
- description: Group management endpoints
  name: Groups
