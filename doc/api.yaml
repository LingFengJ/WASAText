openapi: 3.0.3
info:
  title: WASAText API
  description: |
    API for WASAText messaging application that enables users to send messages,
    create groups, and manage conversations.
  version: 1.0.0

components:
  # Global authentication definition
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes

  schemas:
    Message:
      description: Represents a single message in a conversation
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the message
        content:
          type: string
          description: Text content or URL for photo messages
        timestamp:
          type: string
          format: date-time
          description: When the message was sent
        sender:
          type: string
          description: Username of message sender
        status:
          type: string
          enum: [sent, received, read]
          description: Delivery status of the message
        type:
          type: string
          enum: [text, photo]
          description: Type of message content
        replyTo:
          type: string
          format: uuid
          nullable: true
          description: ID of message being replied to

    Conversation:
      description: Represents a conversation (private or group)
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the conversation
        name:
          type: string
          description: Display name for the conversation
        photo:
          type: string
          format: uri
          description: URL of conversation photo
        type:
          type: string
          enum: [individual, group]
          description: Whether this is a private or group chat
        lastMessage:
          type: object
          description: Preview of the most recent message
          properties:
            content:
              type: string
            timestamp:
              type: string
              format: date-time
            type:
              type: string
              enum: [text, photo]

    Reaction:
      description: Represents an emoji reaction to a message
      type: object
      properties:
        userId:
          type: string
          description: ID of user who reacted
        username:
          type: string
          description: Username of user who reacted
        emoji:
          type: string
          description: The emoji reaction

# Apply authentication globally to all endpoints
security:
  - bearerAuth: []

paths:
  /session:
    post:
      tags: ["Authentication"]
      summary: Login or register user
      description: Creates new user or logs in existing user with given username
      operationId: doLogin
      # Override global security - login doesn't need auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 16
                  pattern: '^.*?$'
      responses:
        '201':
          description: Login successful, returns user identifier for auth

  /users/me/name:
    put:
      tags: ["User"]
      summary: Update user's name
      description: Changes the authenticated user's display name
      operationId: setMyUserName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 16
      responses:
        '200':
          description: Name updated successfully
        '409':
          description: Name already in use by another user

  /users/me/photo:
    put:
      tags: ["User"]
      summary: Update user's profile photo
      description: Changes the authenticated user's profile picture
      operationId: setMyPhoto
      requestBody:
        required: true
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Photo updated successfully

  /conversations:
    get:
      tags: ["Conversations"]
      summary: Get user's conversations
      description: Returns list of all conversations the user is part of
      operationId: getMyConversations
      responses:
        '200':
          description: List of conversations sorted by latest message

  /conversations/{conversationId}:
    get:
      tags: ["Conversations"]
      summary: Get conversation details and messages
      description: Returns conversation info and message history
      operationId: getConversation
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Full conversation details with messages

  /conversations/{conversationId}/messages:
    post:
      tags: ["Messages"]
      summary: Send a new message
      description: Sends text or photo message to a conversation
      operationId: sendMessage
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                type:
                  type: string
                  enum: [text, photo]
                replyTo:
                  type: string
                  format: uuid
                  nullable: true
      responses:
        '201':
          description: Message sent successfully

  /messages/{messageId}:
    delete:
      tags: ["Messages"]
      summary: Delete a message
      description: Removes a message sent by the authenticated user
      operationId: deleteMessage
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Message deleted successfully

  /messages/{messageId}/forward:
    post:
      tags: ["Messages"]
      summary: Forward a message
      description: Forwards an existing message to another conversation
      operationId: forwardMessage
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conversationId:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Message forwarded successfully

  /messages/{messageId}/reactions:
    post:
      tags: ["Messages"]
      summary: Add a reaction to a message
      description: Adds an emoji reaction to a message
      operationId: commentMessage
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emoji:
                  type: string
      responses:
        '201':
          description: Reaction added successfully

    delete:
      tags: ["Messages"]
      summary: Remove a reaction from a message
      description: Removes user's emoji reaction from a message
      operationId: uncommentMessage
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Reaction removed successfully

  /groups/{groupId}/members:
    post:
      tags: ["Groups"]
      summary: Add a user to a group
      description: Adds new member to a group conversation
      operationId: addToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
      responses:
        '200':
          description: User added to group successfully

  /groups/{groupId}/leave:
    post:
      tags: ["Groups"]
      summary: Leave a group
      description: Removes authenticated user from a group
      operationId: leaveGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully left the group

  /groups/{groupId}/name:
    put:
      tags: ["Groups"]
      summary: Update group name
      description: Changes the display name of a group
      operationId: setGroupName
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 50
      responses:
        '200':
          description: Group name updated successfully

  /groups/{groupId}/photo:
    put:
      tags: ["Groups"]
      summary: Update group photo
      description: Changes the photo of a group
      operationId: setGroupPhoto
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Group photo updated successfully